#range function provides lowerlimt and upper limit to the for loop to iterate
#wap to print the sum of first n numbers
n=int(input())
s=0
for i in range(n+1):
    s+=i
print(s)

#factorial of given number
n=int(input())
f=1
for i in range(1,n+1):
    f*=i
print(f)

#perfect number or not
n=int(input())
k=0
for i in range(1,n):
    if n%i==0:
        k+=i
if n==k:
    print('perfect number')
else:
    print('not perfect number')

#even numbers in given range
ll=int(input())
ul=int(input())
for i in range(ll,ul+1):
    if i%2==0:
        print(i)

#wap to print alternate even numbers in given range
ll=int(input())
ul=int(input())
c=0
for i in range(ll,ul+1):
    if i%2==0:
        c+=1
        if c%2!=0:
            print(i)

#wap to print second even numbers in given range
ll=int(input())
ul=int(input())
c=0
for i in range(ll,ul+1):
    if i%2==0:
        c+=1
        if c%2==0:
            print(i)

#wap to print third even numbers in given range
ll=int(input())
ul=int(input())
c=0
for i in range(ll,ul+1):
    if i%2==0:
        c+=1
        if c%3==0:
            print(i)

'''for loop with range and collection data type -it is used when we r dealing with index positions or when we need to extract multiple elements then we will go with for with range and collection datatype'''
#wapt print index positions of vowels in a given string
s=input()
v='aeiouAEIOU'
for ip in range(len(s)):
    if s[ip] in v:
        print(ip)


#wapt print index positions of consonents in a given string
s=input()
v='aeiouAEIOU'
for ip in range(len(s)):
    if s[ip] not in v:
        print(ip)

#sum of integers present in a str
s=input()
summ=0
for i in s:
    if i.isdigit():
        k=int(i)
        summ+=k
print(summ)

#sum of indexpositions of digits  present in a str
s=input()
summ=0
for ip in range(len(s)):
    if s[ip].isdigit():
        summ+=ip
print(summ)

#sum of even digits present in odd index positions
s=input()
c=0
for ip in range(len(s)):
    if s[ip].isdigit():
        k=int(s[ip])
        if k%2==0 and ip%2==1:
            c+=k
print(c)

#sum of even ip  of even numbers
s=input()
c=0
for ip in range(len(s)):
    if s[ip].isdigit():
        k=int(s[ip])
        if k%2==0 and ip%2==0:
            c+=ip
print(c)

#sum of even ip  of odd numbers
s=input()
c=0
for ip in range(len(s)):
    if s[ip].isdigit():
        k=int(s[ip])
        if k%2==1 and ip%2==0:
            c+=ip
print(c)


#sum of odd digits present in even ip  
s=input()
c=0
for ip in range(len(s)):
    if s[ip].isdigit():
        k=int(s[ip])
        if k%2==1 and ip%2==0:
            c+=k
print(c)

#wap to check how many times the given substring is present in given str
s=input()
sub=input()
c=0
for ip in range(len(s)):
    if s[ip:ip+len(sub)]==sub:
        c+=1
print(c)

#wap to find sum of ip of the substr in agiven str
s=input()
sub=input()
c=0
for ip in range(len(s)):
    if s[ip:ip+len(sub)]==sub:
        c+=ip
print(c)


#wap to print all the palindromes present in a str
s=input()
c=0
for sp in range(len(s)):
    for ep in range(sp+1,len(s)):
        k=s[sp:ep+1]
        if k==k[::-1]:
            c+=1
            print(k)
print(c)
